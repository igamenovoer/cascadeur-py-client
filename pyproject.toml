[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "cascadeur-py-client"
version = "0.1.0"
description = "A pythonic client API to interface with Cascadeur animation software"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
maintainers = [
    {name = "Your Name", email = "your.email@example.com"}
]
keywords = ["cascadeur", "animation", "3d", "character", "rigging", "physics"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Multimedia :: Graphics :: 3D Modeling",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.11,<3.13"
dependencies = [
    "jsonrpc>=3.0.1,<4",
    "aiohttp>=3.12.15,<4",
    "requests>=2.32.5,<3",
    "pydantic>=2.11.7,<3",
    "html2text>=2025.4.15,<2026",
    "jsonrpcclient>=4.0.3,<5",
    "jsonrpcserver>=5.0.9,<6",
    "click",
    "platformdirs>=4.3.8,<5",
    "loguru>=0.7.3,<0.8",
    "attrs>=25.3.0,<26",
    "emoji>=2.14.1,<3",
    "smplx>=0.1.28,<0.2",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=22.0",
    "isort>=5.0",
    "flake8>=4.0",
    "mypy>=0.910",
]
docs = [
    "sphinx>=4.0",
    "sphinx-rtd-theme>=1.0",
    "sphinx-autodoc-typehints>=1.12",
]

[project.urls]
Homepage = "https://github.com/igamenovoer/cascadeur-py-client"
Repository = "https://github.com/igamenovoer/cascadeur-py-client"
Documentation = "https://cascadeur-py-client.readthedocs.io/"
"Bug Tracker" = "https://github.com/igamenovoer/cascadeur-py-client/issues"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 88
target-version = ['py311', 'py312']

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests/auto"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --cov=cascadeur_py_client --cov-report=term-missing"

[tool.pixi.workspace]
channels = ["conda-forge"]
platforms = ["win-64", "linux-64", "osx-arm64"]

[tool.pixi.dependencies]
# Pin Python version explicitly (avoids ambiguity warning)
python = ">=3.11,<3.13"

# CUDA PyTorch for Windows (PyPI with CUDA 12.6)
[tool.pixi.target.win-64.pypi-dependencies]
torch = { version = "*", index = "https://download.pytorch.org/whl/cu126" }
torchvision = { version = "*", index = "https://download.pytorch.org/whl/cu126" }

# CUDA PyTorch for Linux (PyPI with CUDA 12.6)  
[tool.pixi.target.linux-64.pypi-dependencies]
torch = { version = "*", index = "https://download.pytorch.org/whl/cu126" }
torchvision = { version = "*", index = "https://download.pytorch.org/whl/cu126" }

# CPU-only PyTorch for macOS ARM (PyPI CPU-only)
[tool.pixi.target.osx-arm64.pypi-dependencies]
torch = { version = "*", index = "https://download.pytorch.org/whl/cpu" }
torchvision = { version = "*", index = "https://download.pytorch.org/whl/cpu" }

[tool.pixi.pypi-dependencies]
cascadeur-py-client = { path = ".", editable = true }
litellm = { version = ">=1.75.9,<2", extras = ["proxy"] }

[tool.pixi.feature.cas-installer]
channels = ["conda-forge"]
platforms = ["win-64", "linux-64", "osx-arm64"]

[tool.pixi.feature.cas-installer.dependencies]
python = "3.11.*"
pip = ">=23.0"
wheel = ">=0.40"
setuptools = ">=68.0"
requests = ">=2.31"

[tool.pixi.environments]
default = { solve-group = "default" }
dev = { features = ["dev"], solve-group = "default" }
docs = { features = ["docs"], solve-group = "default" }
cas-installer = { features = ["cas-installer"], solve-group = "cas-installer" }

[tool.pixi.tasks]
# Cascadeur package installation tasks
[tool.pixi.feature.cas-installer.tasks]
cas-pip = "python -m pip"
cas-install = { cmd = "python scripts/install_to_cascadeur.py", depends-on = [] }
cas-list = "python scripts/list_cascadeur_packages.py"

[dependency-groups]
dev = ["sphobjinv>=2.3.1.3,<3", "bs4>=0.0.2,<0.0.3", "playwright>=1.54.0,<2", "scrapy>=2.13.3,<3", "ruff>=0.12.10,<0.13", "ipykernel>=6.30.1,<7", "firecrawl>=3.4.0,<4", "llm-anygate>=1.0.4,<2", "firecrawl-py>=3.4.0,<4"]
